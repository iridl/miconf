#!/usr/bin/python
import sys
import ply.lex as lex

iname = sys.argv[1]
oname = sys.argv[2]
langs  = sys.argv[3].split(',')

tokens = ('OPEN','CONT','CLOSE','OPENN','CONTN','CLOSEN','OPENE','newline','CHAR')

t_CHAR    = r'.'
t_OPEN    = r'<<<[a-zA-Z_]+:'
t_OPENE   = r'<<<'
t_CONT    = r'\|\|\|[a-zA-Z_]+:'
t_CLOSE   = r'>>>'

def t_CLOSEN(t):
    r'(?m)^>>>\n'
    t.lexer.lineno += 1
    return t

def t_CONTN(t):
    r'(?m)^\|\|\|[a-zA-Z_]+:\n'
    t.lexer.lineno += 1
    return t

def t_OPENN(t):
    r'(?m)^<<<[a-zA-Z_]+:\n'
    t.lexer.lineno += 1
    return t

def t_newline(t):
    r'\n'
    t.lexer.lineno += len(t.value)
    return t

def t_error(t):
    print("Illegal character '%s'" % t.value[0])
    t.lexer.skip(1)

def error(t,s):
   print("miconf-multi: error: %s (token: %s)" % (s,t))
   sys.exit(1)

lexer = lex.lex()

fi = open(iname,'r')
si = fi.read()
fi.close()

sp = 0
tlang = '';
stack = [[tlang,{tlang:""},0]]
lexer.input(si)
while True:
    t = lexer.token()
    if not t: 
        break      # No more input
    if t.type == 'OPENE':
        stack[sp][2] += 1
        stack[sp][1][tlang] += t.value
    elif t.type == 'OPEN' or t.type == 'OPENN':
        tlang = t.value[3:len(t.value)-(1 if t.type == 'OPEN' else 2)]
        sp += 1
        stack.append([tlang,{tlang:""},0])
    elif t.type == 'CONT' or t.type == 'CONTN':
        if stack[sp][2] != 0:
           error(t,"expected '>>>'")
        if sp == 0:
           stack[sp][1][tlang] += t.value
        else:
           tlang = t.value[3:len(t.value)-(1 if t.type == 'CONT' else 2)]
           stack[sp][0] = tlang
           stack[sp][1][tlang] = ""
    elif t.type == 'CLOSE' or t.type == 'CLOSEN':
        if stack[sp][2] != 0:
           stack[sp][2] -= 1
           stack[sp][1][tlang] += t.value
        else:
           if sp == 0:
              error(t,"unexpected '>>>'")
           else:
              s = ""
              for lang in langs:
                 if lang in stack[sp][1]:
                    s = stack[sp][1][lang]
                    break
              sp -= 1
              stack.pop()
              tlang = stack[sp][0]
              stack[sp][1][tlang] += s
    else:
       stack[sp][1][tlang] += t.value
    #print(tlang,t,lexer.lineno,stack,sp)

if sp != 0 or stack[sp][2] != 0:
   error('EOF',"missing '>>>'s at the end of the input")

fo = open(oname,'w')
fo.write(stack[0][1][''])
fo.close()

sys.exit(0)

