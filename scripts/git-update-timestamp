#!/bin/sh -e

OS=${OS:-`uname`}
rev="${1-HEAD}"
pattern="${2-*}"

#echo "git-update-timestamp: '$OS', '$rev', '$pattern'"

get_file_rev() {
    git rev-list "$rev" "$1" | head -n 1
}

report() {
    echo "$2 $1"
}

if   [ "$OS" = 'Linux' ]
then
    update_file_timestamp() {
        file_time=`git show --pretty=format:%ai --abbrev-commit "$(get_file_rev "$1")" | head -n 1`
        touch -d "$file_time" "$1"
        report "$1" "$file_time"
    }
elif [ "$OS" = 'FreeBSD' ]
then
    update_file_timestamp() {
        file_time=`date -r "$(git show --pretty=format:%at --abbrev-commit "$(get_file_rev "$1")" | head -n 1)" '+%Y%m%d%H%M.%S'`
        touch -h -t "$file_time" "$1"
        report "$1" "$file_time"
    }
elif [ "$OS" = 'Darwin' ]
then
    update_file_timestamp() {
        file_time=`date -j -f '%s' "$(git show --pretty=format:%at --abbrev-commit "$(get_file_rev "$1")" | head -n 1)" '+%Y%m%d%H%M.%S'`
        #stat -t '%Y%m%d%H%M.%S' -f "stat1: %Sa %Sm %Sc %i %N" "$1"
        touch -t "$file_time" "$1"
        report "$1" "$file_time"
        #stat -t '%Y%m%d%H%M.%S' -f "stat2: %Sa %Sm %Sc %i %N" "$1"
    }
else
    echo "error: timestamp fix not implemented for $OS" >&2
    exit 1
fi

for file in `git ls-files "$pattern"`
do
    update_file_timestamp "$file"
done

