#!/bin/sh -e

label=${1-release}
pattern="$1-[0-9]*"
mode=${2-raw}
ref="${3-HEAD}"

#echo "git-generate-version-info: '$label', '$pattern', '$mode', '$ref'"

if [[ $mode != "id" ]]; then
   id=`"$0" "$label" id "$ref"`
   ts=`git show --format="%ci" "$id" | head -1 | tr -d '\n'`
fi

git describe --tags --long --abbrev=40 --match "$pattern" "$ref" | awk -F - -v "label=$label" -v "mode=$mode" -v "ref=$ref" -v "ts=$ts" '
{
   raw=$0
   ver=$2
   if( $2 == "" ) {
      verx=$2 "0.0.0.0"
   } else {
      verx=$2 ".0.0.0.0"
   }
   ahead=$3
   id=substr($4,2,length($4))
   scm=substr($4,1,1)
   if(scm=="g") {
      scm="git";
   }
   n=split(verx,vers,".");
   split(ts,tss," ");
   split(tss[1],dc,"-");
   split(tss[2],tc,":");
   if( ahead==0 ) {
      tag = label "-" ver;
   } else {
      tag = raw;
   }
   if(mode=="c") {
      printf("#define %s_VERSION_RAW \"%s\"\n", label,raw);
      printf("#define %s_VERSION_TAG \"%s\"\n", label,tag);
      printf("#define %s_VERSION \"%s\"\n", label,ver);
      printf("#define %s_VERSION_MAJOR %d\n", label,vers[1]);
      printf("#define %s_VERSION_MINOR %d\n", label,vers[2]);
      printf("#define %s_VERSION_PATCH %d\n", label,vers[3]);
      printf("#define %s_VERSION_UPDATE %d\n", label,vers[4]);
      printf("#define %s_VERSION_AHEAD %d\n", label,ahead);
      printf("#define %s_VERSION_ID \"%s\"\n", label,id);
      printf("#define %s_VERSION_SCM \"%s\"\n", label,scm);
      printf("#define %s_VERSION_REF \"%s\"\n", label,ref);
      printf("#define %s_VERSION_TS \"%s\"\n", label,ts);
      printf("#define %s_VERSION_DATE \"%s\"\n", label,tss[1]);
      printf("#define %s_VERSION_TIME \"%s\"\n", label,tss[2] " " tss[3]);
      printf("#define %s_VERSION_YEAR %d\n", label,dc[1]);
      printf("#define %s_VERSION_MONTH %d\n", label,dc[2]);
      printf("#define %s_VERSION_DAY %d\n", label,dc[3]);
   } else if(mode=="sh") {
      printf("%s_VERSION_RAW=\"%s\"; export %s_VERSION_RAW\n", label,raw,label);
      printf("%s_VERSION_TAG=\"%s\"; export %s_VERSION_TAG\n", label,tag,label);
      printf("%s_VERSION=\"%s\"; export %s_VERSION\n", label,ver,label);
      printf("%s_VERSION_MAJOR=%d; export %s_VERSION_MAJOR\n", label,vers[1],label);
      printf("%s_VERSION_MINOR=%d; export %s_VERSION_MINOR\n", label,vers[2],label);
      printf("%s_VERSION_PATCH=%d; export %s_VERSION_PATCH\n", label,vers[3],label);
      printf("%s_VERSION_UPDATE=%d; export %s_VERSION_UPDATE\n", label,vers[4],label);
      printf("%s_VERSION_AHEAD=%d; export %s_VERSION_AHEAD\n", label,ahead,label);
      printf("%s_VERSION_ID=\"%s\"; export %s_VERSION_ID\n", label,id,label);
      printf("%s_VERSION_SCM=\"%s\"; export %s_VERSION_SCM\n", label,scm,label);
      printf("%s_VERSION_REF=\"%s\"; export %s_VERSION_REF\n", label,ref,label);
      printf("%s_VERSION_TS=\"%s\"; export %s_VERSION_TS\n", label,ts,label);
      printf("%s_VERSION_DATE=\"%s\"; export %s_VERSION_DATE\n", label,tss[1],label);
      printf("%s_VERSION_TIME=\"%s\"; export %s_VERSION_TIME\n", label,tss[2] " " tss[3],label);
      printf("%s_VERSION_YEAR=%d; export %s_VERSION_YEAR\n", label,dc[1],label);
      printf("%s_VERSION_MONTH=%d; export %s_VERSION_MONTH\n", label,dc[2],label);
      printf("%s_VERSION_DAY=%d; export %s_VERSION_DAY\n", label,dc[3],label);
   } else if(mode=="csh") {
      printf("setenv %s_VERSION_RAW \"%s\"\n", label,raw);
      printf("setenv %s_VERSION_TAG \"%s\"\n", label,tag);
      printf("setenv %s_VERSION \"%s\"\n", label,ver);
      printf("setenv %s_VERSION_MAJOR %d\n", label,vers[1]);
      printf("setenv %s_VERSION_MINOR %d\n", label,vers[2]);
      printf("setenv %s_VERSION_PATCH %d\n", label,vers[3]);
      printf("setenv %s_VERSION_UPDATE %d\n", label,vers[4]);
      printf("setenv %s_VERSION_AHEAD %d\n", label,ahead);
      printf("setenv %s_VERSION_ID \"%s\"\n", label,id);
      printf("setenv %s_VERSION_SCM \"%s\"\n", label,scm);
      printf("setenv %s_VERSION_REF \"%s\"\n", label,ref);
      printf("setenv %s_VERSION_TS \"%s\"\n", label,ts);
      printf("setenv %s_VERSION_DATE \"%s\"\n", label,tss[1]);
      printf("setenv %s_VERSION_TIME \"%s\"\n", label,tss[2] " " tss[3]);
      printf("setenv %s_VERSION_YEAR %d\n", label,dc[1]);
      printf("setenv %s_VERSION_MONTH %d\n", label,dc[2]);
      printf("setenv %s_VERSION_DAY %d\n", label,dc[3]);
   } else if(mode=="lua"||mode=="miconf") {
      printf("%s_VERSION = {\n", label);
      printf("raw=\"%s\",\n", raw);
      printf("tag=\"%s\",\n", tag);
      printf("version=\"%s\",\n", ver);
      printf("major=%d,\n", vers[1]);
      printf("minor=%d,\n", vers[2]);
      printf("patch=%d,\n", vers[3]);
      printf("update=%d,\n", vers[4]);
      printf("ahead=%d,\n", ahead);
      printf("id=\"%s\",\n", id);
      printf("scm=\"%s\",\n", scm);
      printf("ref=\"%s\",\n", ref);
      printf("ts=\"%s\",\n", ts);
      printf("date=\"%s\",\n", tss[1]);
      printf("time=\"%s\",\n", tss[2] " " tss[3]);
      printf("year=%d,\n", dc[1]);
      printf("month=%d,\n", dc[2]);
      printf("day=%d,\n", dc[3]);
      printf("}\n");
   } else if(mode=="xml") {
      printf("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
      printf("<ver label=\"%s\">\n", label);
      printf("   <raw>%s</raw>\n", raw);
      printf("   <tag>%s</tag>\n", tag);
      printf("   <version>%s</version>\n", ver);
      printf("   <major>%d</major>\n", vers[1]);
      printf("   <minor>%d</minor>\n", vers[2]);
      printf("   <patch>%d</patch>\n", vers[3]);
      printf("   <update>%d</update>\n", vers[4]);
      printf("   <ahead>%d</ahead>\n", ahead);
      printf("   <id>%s</id>\n", id);
      printf("   <scm>%s</scm>\n", scm);
      printf("   <ref>%s</ref>\n", ref);
      printf("   <ts>%s</ts>\n", ts);
      printf("   <date>%s</date>\n", tss[1]);
      printf("   <time>%s</time>\n", tss[2] " " tss[3]);
      printf("   <year>%d</year>\n", dc[1]);
      printf("   <month>%d</month>\n", dc[2]);
      printf("   <day>%d</day>\n", dc[3]);
      printf("</ver>\n");
   } else if(mode=="version") {
      printf("%s",ver);
   } else if(mode=="major") {
      printf("%d",vers[1]);
   } else if(mode=="minor") {
      printf("%d",vers[2]);
   } else if(mode=="patch") {
      printf("%d",vers[3]);
   } else if(mode=="update") {
      printf("%d",vers[4]);
   } else if(mode=="ahead") {
      printf("%d",ahead);
   } else if(mode=="ref") {
      printf("%s",ref);
   } else if(mode=="tag") {
      printf("%s",tag);
   } else if(mode=="scm") {
      printf("%s",scm);
   } else if(mode=="ts") {
      printf("%s",ts);
   } else if(mode=="date") {
      printf("%s",tss[1]);
   } else if(mode=="time") {
      printf("%s",tss[2] " " tss[3]);
   } else if(mode=="year") {
      printf("%d",dc[1]);
   } else if(mode=="month") {
      printf("%d",dc[2]);
   } else if(mode=="day") {
      printf("%d",dc[3]);
   } else if(mode=="id") {
      printf("%s",id);
   } else { #raw
      printf("%s",raw);
   }
}
'
